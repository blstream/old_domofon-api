swagger: '2.0'
info:
  version: 0.2.0
  title: Domofon Server
  description: Application developed as part of CodeSpace #1
host: domofon-api.blstream.net
basePath: /v1
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
  - text/plain
paths:
  /contacts:
    get:
      summary: Returns list of Contact entries
      description: Returned data is JSON array with entries of ContactResponse
      parameters:
        - name: archive
          in: query
          description: Should return Contact objects which are archived
          type: boolean
          default: false
          required: false
      responses:
        200:
          description: Return list of Contact entries
          schema:
            type: array
            items:
              $ref: '#/definitions/ContactResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'              

    post:
      summary: Allow creation of new Contact entry
      description: "We are aware it should be client-side generated PUT, but for simplicity of implementation we decided to keep POST. Returned String is ID of created event as UUID."
      responses:
        200:
          description: Contact was created
          examples: 
            text/plain: "d41b57fb-30a4-44b8-99e2-9cb9f9058838"
            application/json: 
              id: "d41b57fb-30a4-44b8-99e2-9cb9f9058838"
          schema:
            type: string
            format: uuid
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      parameters:
       - name: contact
         in: body
         description: Contact to add
         required: true
         schema:
          $ref: '#/definitions/ContactRequest'

            
  /contacts/sse:
    get:
      produces: ["text/event-stream"]
      description: Streaming events representing changes to Contacts, after event was received it might be need to reload list of Contacts
      responses:
        200:
          description: Server-Sent Events stream
          schema:
            $ref: '#/definitions/SSEvent'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /contacts/{id}:
    get:
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          description: ID of the contact to retrieve
          required: true
      responses:
        200:
          description: Contact was found and could be returned
          schema:
            $ref: '#/definitions/ContactResponse'
        404:
          description: Unable to find Contact entity
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      parameters:
      - name: id
        in: path
        type: string
        format: uuid
        description: ID of the contact to remove
        required: true
      responses:
        200:
          description: Contact removed
          schema:
            type: string
          examples:
            text/plain: OK
            application/json:
              status: OK            
        404:
          description: Unable to find Contact entity
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'          


  /contacts/{id}/notify:
    post:
      parameters:
        - name: id
          in: path
          type: string
          format: uuid          
          description: ID of the contact to trigger notification for
          required: true
      responses:
        200:
          description: Notification was sent
          schema:
            type: string
          examples:
            text/plain: OK
            application/json:
              status: OK            
        404:
          description: Unable to find Contact entity
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'          

  /contacts/{id}/message:
    put:
      summary: Allows changing notification message which will be used for notification
      description: "It can contain few placeholders which will be expanded before sending:
      {id}, {name}, {phone}, {company}, {isimportant}, {secret}
      "
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          description: ID of the contact to change custom notification message
          required: true
      responses:
        200:
          description: Message was altered
          schema:
            type: string
          examples:
            text/plain: OK
            application/json:
              status: OK            
        404:
          description: Unable to find Contact entity
          schema:
            type: string
            
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'          

  /contacts/{id}/important:
    put:
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          description: ID of the Contact to change importance
          required: true
      responses:
        200:
          description: Message importance status was changed
          schema:
            type: string
          examples:
            text/plain: OK
            application/json:
              status: OK            
        404:
          description: Unable to find Contact entity
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'          

  /contacts/{id}/deputy:
    put:
      parameters:
        - name: id
          in: path
          type: string
          format: uuid          
          description: ID of the contact to set custom Deputy
          required: true
        - name: deputy
          in: body
          schema:
            $ref: '#/definitions/Notifee'

      responses:
        200:
          description: Deputy was changed
          schema:
            type: string
          examples:
            text/plain: OK
            application/json:
              status: OK            
        404:
          description: Unable to find Contact entity
          schema:
            type: string
    delete:      
      parameters:
        - name: id
          in: path
          type: string
          format: uuid          
          description: ID of the Contact to remove custom Deputy
          required: true
      responses:
        200:
          description: Deputy was removed
          schema:
            type: string
          examples:
            text/plain: OK
            application/json:
              status: OK
        404:
          description: Unable to find Contact entity
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'          


definitions:
  Notifee:
    type: object
    required:
      - name
      - notifyEmail
      - phone
    properties:
      name:
        type: string
      company:
        type: string
      notifyEmail:
        type: string
      phone:
        type: string

  ContactRequest:
    type: object   
    required:
      - name
      - notifyEmail
      - phone
    properties:
      name:
        type: string
      company:
        type: string
      notifyEmail:
        type: string
      phone:
        type: string
      adminEmail:
        type: string
      fromDate:
        type: string
        format: date
      tillDate:
        type: string
        format: date

  ContactResponse:
    type: object
    required:
      - id
      - name
      - notifyEmail
      - phone
      - adminEmail
      - isImportant
    properties:
      id:
        type: string
      name:
        type: string
      company:
        type: string
      notifyEmail:
        type: string
      phone:
        type: string
      adminEmail:
        type: string
      fromDate:
        type: string
        format: date
      tillDate:
        type: string
        format: date        
      isImportant:
        type: boolean
      message:
        type: string
      deputy:
        $ref: '#/definitions/Notifee'
        
  SSEvent:
    type: object
    properties:
      updatedAt:
        type: string
        format: date-time
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string        
